set nocompatible              " be iMproved, required
set number                    " line number
set visualbell                " no beep, just flash when a mistake is made
set foldmethod=indent
set foldlevel=99
set clipboard=unnamed
set lazyredraw

set shiftwidth=2              " tab size
set softtabstop=2             " tab size
set expandtab                 " tab size

set autoread                  " reload if file is edited somewhere else
set colorcolumn=80
set nolinebreak
set showmode                  " always show the cursor position
set autoindent                " auto indent new lines
set scrolloff=10               " keep the last used line 4 lines from botton

set hlsearch
set ignorecase
set smartcase
set incsearch                 " hightlights searched terms as they are typed

set noswapfile                " doesn't create the swap files
set cursorline                " line beneath the current line
set hidden                    " allows buffers to be hidden if you'he modified a buffer
set backspace=indent,eol,start

syntax enable
let g:solarized_termcolors=16
set background=dark
colorscheme solarized

" solarized.vim must be on ~/.vim/colors/
let g:airline_solarized_bg = 'dark'
let g:airline_powerline_fonts = 1
let g:airline_section_z = '%l / %L | %c'

let g:buffergator_viewport_split_policy = 'R'
let g:buffergator_suppress_keymaps = 1

let g:nerdtree_tabs_open_on_console_startup = 1

let g:NERDTrimTrailingWhitespace = 1
let g:NERDSpaceDelims = 1
let g:NERDDefaultAlign = 'left'

let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_guide_size=1
let g:indent_guides_start_level=2

" auto complete
let g:ycm_autoclose_preview_window_after_completion=1

" python syntax
let python_highlight_all=1

" docstring for folded code
let g:SimpylFold_docstring_preview=1

" syntax check
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_aggregate_errors = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_auto_loc_list_height = 5
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0
let g:syntastic_error_symbol = "\u2717"
let g:syntastic_warning_symbol = "\u26A0"

highlight ColorColumn ctermbg=0 guibg=DarkSeaGreen1

autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim

call vundle#begin()

" vim +PluginInstall +qall
" Github plugin:	Plugin 'tpope/vim-fugitive'
" Not github plugin:	Plugin 'git://git.wincent.com/comment-t.git'

" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal

Plugin 'gmarik/Vundle.vim'	" required
Plugin 'scrooloose/nerdtree'    " file manager
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'jeetsukumaran/vim-buffergator'
Plugin 'scrooloose/nerdcommenter'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'airblade/vim-gitgutter'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'lervag/vimtex'
Plugin 'tmhedberg/SimpylFold'   " fold fix
Plugin 'Valloric/YouCompleteMe' " auto complete
Plugin 'scrooloose/syntastic'   " syntax check
Plugin 'nvie/vim-flake8'        " PEP8 check
Plugin 'kien/ctrlp.vim'         " search
Plugin 'tpope/vim-fugitive'     " basic git commands

call vundle#end()

filetype plugin indent on	" required

" Put your non-Plugin stuff after this line

inoremap jj <Esc>

map <C-n> :NERDTreeToggle<CR>

" Auto complete, goes to definition or declaration of variable
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>

" Buffer manage Keys
nmap <leader>T :enew<cr>          " Open a new empty buffer
nmap <leader>bq :bp <BAR> bd #<CR>" Close current buffer and move to previous one

" Buffergator Plugin
nmap <leader>hh :BuffergatorMruCyclePrev<cr>
nmap <leader>ll :BuffergatorMruCycleNext<cr>
nmap <leader>bl :BuffergatorOpen<cr>          " List all open buffers

map <C-h> <C-W>h
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-l> <C-W>l
map <leader>;; <plug>(vimtex-compile)

"python with virtualenv support
py << EOF
import os
import sys
if 'VIRTUAL_ENV' in os.environ:
  project_base_dir = os.environ['VIRTUAL_ENV']
  activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
  execfile(activate_this, dict(__file__=activate_this))
EOF
